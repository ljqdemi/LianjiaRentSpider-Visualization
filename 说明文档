# 说明文档

## 1. 项目概述
本项目包含两个主要模块：LianjiaRentSpider.py和Data_Visualization.py。LianjiaRentSpider.py负责从链家网爬取租房信息并存储到SQLite数据库中；Data_Visualization.py则对数据库中的数据进行统计分析，并通过可视化图表展示结果。系统旨在帮助用户快速了解租房市场的分布、价格趋势和特征。

## 2. 功能需求

### 2.1 数据爬取功能
- **目标**：从链家网爬取上海地区的租房信息。
- **功能**：
  - 支持多页爬取（默认爬取前50页）。
  - 提取房源标题、租赁类型、位置、面积、价格、户型、朝向、楼层、装修情况、交通便利性、支付方式、是否首次出租、品牌公寓信息及房源链接。
  - 将爬取的数据存储到SQLite数据库中。

### 2.2 数据分析与可视化功能
- **目标**：对爬取的数据进行统计分析，并以可视化图表展示结果。
- **功能**：
  - **数据预处理**：清洗价格、面积字段，提取楼层信息，计算租金性价比。
  - **数据可视化**：
    - 品牌词云图：展示品牌出现频率。
    - 区域房源分布：通过饼状图展示。
    - 租金性价比分析：通过条形图、箱线图展示。
    - 面积与价格关系：通过散点图展示。
    - 楼层、交通便利性、装修情况对租金的影响：通过箱线图展示。
    - 热力图：展示区域和装修情况的租金性价比。
    - 其他分析：包括房源数量分布、价格分布、面积分布等。

## 3. 非功能需求

### 3.1 性能需求
- 爬虫模块应具备一定的容错能力，能够处理网络请求失败、页面解析错误等情况。
- 数据分析模块应能高效处理大量数据，避免长时间等待。
- 系统运行时应占用较少的系统资源。

### 3.2 可用性需求
- 系统应提供清晰的运行日志，方便用户了解爬虫进度和数据分析结果。
- 数据可视化图表应直观易懂，方便用户快速获取信息。

### 3.3 可扩展性需求
- 爬虫模块应支持扩展，例如增加其他城市的爬取功能。
- 数据分析模块应支持新增分析维度和图表类型。

### 3.4 兼容性需求
- 系统应在主流操作系统（Windows、Linux、macOS）上运行。
- 数据可视化模块应支持多种格式的图表导出（如PNG、SVG）。

## 4. 用户用例/使用场景

### 4.1 用户用例

#### 4.1.1 爬取租房数据
- **用户角色**：数据分析师、研究人员
- **前置条件**：系统已安装并配置好依赖库。
- **事件流**：
  1. 用户运行LianjiaRentSpider.py。
  2. 系统提示正在爬取数据，并显示当前页码。
  3. 爬取完成后，系统提示数据已存储到数据库。
- **后置条件**：数据库中存储了完整的租房数据。

#### 4.1.2 数据分析与可视化
- **用户角色**：数据分析师、研究人员
- **前置条件**：数据库中已存储租房数据。
- **事件流**：
  1. 用户运行Data_Visualization.py。
  2. 系统从数据库读取数据并进行预处理。
  3. 系统依次生成并展示多种可视化图表。
  4. 用户可以通过图表了解租房市场的分布、价格趋势等信息。
- **后置条件**：用户获取了租房市场的分析结果。

### 4.2 使用场景

#### 4.2.1 场景一：研究人员分析上海租房市场
- **背景**：研究人员希望了解上海租房市场的分布和价格趋势。
- **步骤**：
  1. 研究人员运行LianjiaRentSpider.py，爬取上海地区的租房数据。
  2. 研究人员运行Data_Visualization.py，查看生成的可视化图表。
  3. 研究人员通过区域房源分布图了解不同区域的房源数量。
  4. 研究人员通过租金性价比图了解不同区域和装修情况下的租金水平。
  5. 研究人员通过面积与价格关系图分析面积对租金的影响。

#### 4.2.2 场景二：用户寻找性价比高的房源
- **背景**：用户希望在上海寻找性价比高的租房。
- **步骤**：
  1. 用户运行LianjiaRentSpider.py，爬取最新的租房数据。
  2. 用户运行Data_Visualization.py，查看生成的租金性价比图表。
  3. 用户通过条形图找到租金性价比最高的前50个房源。
  4. 用户通过热力图了解不同区域和装修情况下的租金性价比。
  5. 用户通过房源链接访问链家网，进一步了解感兴趣的房源。


## 5. 业务流程

### 5.1 数据爬取流程
1. **初始化数据库**：创建或连接SQLite数据库，创建rentals表。
2. **分页爬取**：从链家网租房页面逐页爬取数据。
3. **页面解析**：解析HTML页面，提取房源信息。
4. **数据存储**：将提取的数据存储到数据库中。
5. **日志记录**：记录爬取进度和错误信息。

### 5.2 数据分析与可视化流程
1. **数据读取**：从SQLite数据库读取租房数据。
2. **数据预处理**：清洗价格、面积字段，提取楼层信息，计算租金性价比。
3. **数据可视化**：
   - 生成品牌词云图。
   - 绘制区域房源分布图。
   - 绘制租金性价比图。
   - 绘制面积与价格关系图。
   - 绘制楼层、交通便利性、装修情况对租金的影响图。
4. **结果展示**：依次展示生成的图表。

## 6. 接口需求

### 6.1 数据库接口
- **数据库文件**：SH_lianjia_rentals_300.db
- **表结构**：rentals表，包含字段id、title、lease_type、location、name、area、price、style、orientation、floor、decoration、transportation、pay_type、first_rent、brand、link。
- **接口函数**：
  - `setup_database()`：创建或连接数据库，初始化表结构。
  - `save_to_database(conn, rentals)`：将爬取的数据存储到数据库中。

### 6.2 数据爬取接口
- **链家网租房页面**：https://sh.lianjia.com/zufang/pg{page}/
- **请求头**：模拟浏览器请求，避免被反爬机制拦截。
- **接口函数**：
  - `get_page_content(url)`：请求网页内容并返回HTML。
  - `parse_page_content(html)`：解析HTML页面，提取房源信息。

### 6.3 数据分析与可视化接口
- **数据读取**：使用pandas.read_sql_query()从数据库读取数据。
- **数据预处理**：
  - `process_price(price_str)`：清洗价格字段。
  - `process_area(area_str)`：清洗面积字段。
  - `process_floor(floor_str)`：提取楼层信息。
- **数据可视化**：使用matplotlib和seaborn生成多种图表。

## 7. 界面需求

### 7.1 爬虫模块界面
- **命令行界面**：
  - 系统运行时在终端显示日志信息，包括爬取进度、当前页码、错误信息等。
  - 爬取完成后提示数据已存储到数据库。

### 7.2 数据分析与可视化模块界面
- **命令行界面**：
  - 系统运行时在终端显示数据预处理的日志信息。
  - 数据可视化图表在独立窗口中展示。

### 7.3 图表展示界面
- **品牌词云图**：展示品牌出现频率，背景为白色，字体为SimHei。
- **区域房源分布图**：通过饼状图展示，标签清晰，显示百分比。
- **租金性价比图**：通过条形图、箱线图展示，颜色渐变。
- **面积与价格关系图**：通过散点图展示，支持按区域着色。
- **楼层、交通便利性、装修情况对租金的影响图**：通过箱线图展示，标签清晰。

## 8. 系统安装与配置

### 8.1 安装依赖库
使用pip安装以下依赖库：
```bash
pip install requests beautifulsoup4 sqlite3 pandas matplotlib seaborn wordcloud

### 8.2 数据库配置
系统默认使用`SH_lianjia_rentals_300.db`作为数据库文件。用户可以根据需要修改数据库文件名，但需确保`LianjiaRentSpider.py`和`Data_Visualization.py`中的数据库文件名一致。

### 8.3 爬虫配置
- 用户可以通过修改`LianjiaRentSpider.py`中的`base_url`变量，指定链家网租房页面的URL。
- 用户可以通过修改`main()`函数中的`range(1, 50)`，调整爬取的页数。

### 8.4 数据分析与可视化配置
- 用户可以通过修改`Data_Visualization.py`中的`database_filename`变量，指定数据库文件名。
- 用户可以通过修改`plt.rcParams['font.sans-serif']`，指定支持中文的字体路径。

## 9. 系统运行

### 9.1 数据爬取
在终端运行以下命令：
```bash
python LianjiaRentSpider.py
系统将自动爬取链家网租房数据，并存储到数据库中。

## 9.2 数据分析与可视化
在终端运行以下命令：
```bash
python Data_Visualization.py
系统将从数据库读取数据，并依次展示多种可视化图表。

## 10. 系统维护

### 10.1 数据更新
用户可以通过重新运行`LianjiaRentSpider.py`，更新数据库中的租房数据。

### 10.2 数据备份
用户可以定期备份数据库文件`SH_lianjia_rentals_300.db`，以防止数据丢失。

### 10.3 日志记录
系统在运行过程中会记录日志信息，用户可以通过查看终端输出了解爬虫进度和数据分析结果。


